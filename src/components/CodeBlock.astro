---
import {
  transformerNotationDiff,
  transformerNotationErrorLevel,
  transformerNotationFocus,
  transformerNotationHighlight,
  transformerNotationWordHighlight,
  transformerRemoveNotationEscape,
} from "@shikijs/transformers";
import { Code as CustomCode } from "astro:components";

interface Props {
  code: string;
  language?: string;
  inline: boolean;
  title?: string | undefined;

  highlightedLines?: string | undefined;
}

const { code, inline } = Astro.props;
const language = "ts";
---

<CustomCode
  code={code}
  inline={inline}
  lang={language}
  defaultColor="dark"
  themes={{ light: "github-light", dark: "github-dark" }}
  transformers={[
    transformerNotationDiff(),
    transformerNotationHighlight(),
    transformerNotationWordHighlight(),
    transformerNotationFocus(),
    transformerNotationErrorLevel(),
    transformerRemoveNotationEscape(),
  ]}
/>

<style is:global>
  :root {
    --color-line-add: #00550055;
    --color-line-remove: #88000055;
    --color-line-highlight: #f0f0f044;

    --bg-color: transparent;

    --linecount: 3;
    --spacing: calc((var(--linecount) + 1) * 0.72rem);
  }

  pre {
    @apply rounded-md pl-[var(--spacing)];
  }

  pre code {
    @apply block border-0 border-l-[1px] border-solid border-[#738a9466] px-2 py-1 text-base leading-tight;

    counter-reset: step;
    counter-increment: step 0;
  }

  pre code .line {
    @apply relative bg-[var(--bg-color)];
  }

  pre code .line::before {
    @apply absolute -left-[var(--spacing)] bg-[var(--bg-color)] text-right text-sm content-[counter(step)];

    counter-increment: step;
  }

  pre code .line.diff {
    /* @apply mx-[-104px] my-0 inline-block w-screen px-[6.5rem] py-0; */
    /* @apply mx-[-104px] my-0 inline-block w-screen py-0; */
  }

  pre code .line.diff::before {
    /* @apply mx-[-104px] my-0 inline-block w-screen px-[6.5rem] py-0; */
    /* @apply absolute left-10; */
  }

  pre code .line.diff.add {
    --bg-color: var(--color-line-add);
  }

  pre code .line.diff.remove {
    --bg-color: var(--color-line-remove);
  }

  pre code .line.highlighted {
    --bg-color: var(--color-line-highlight);
  }

  .has-focused .line {
    filter: blur(0.095rem);
  }

  .has-focused .focused {
    filter: blur(0);
  }
</style>
