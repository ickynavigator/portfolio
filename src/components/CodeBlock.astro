---
import {
  transformerNotationDiff,
  transformerNotationErrorLevel,
  transformerNotationFocus,
  transformerNotationHighlight,
  transformerNotationWordHighlight,
  transformerRemoveNotationEscape,
} from "@shikijs/transformers";
import { Code as CustomCode } from "astro:components";

interface Props {
  code: string;
  language?: string;
  inline: boolean;
  title?: string | undefined;

  highlightedLines?: string | undefined;
}

const { code, inline } = Astro.props;
const language = "ts";
---

<CustomCode
  code={code}
  inline={inline}
  lang={language}
  themes={{ light: "github-light", dark: "github-dark" }}
  transformers={[
    transformerNotationDiff(),
    transformerNotationHighlight(),
    transformerNotationWordHighlight(),
    transformerNotationFocus(),
    transformerNotationErrorLevel(),
    transformerRemoveNotationEscape(),
  ]}
/>

<style>
  :root {
    --color-line-add: #00550055;
    --color-line-remove: #88000055;
    --color-line-highlight: #f0f0f044;

    --bg-color: transparent;

    --linecount: 3;
    --spacing: calc((var(--linecount) + 1) * 0.72rem);
  }

  pre {
    @apply rounded-md border-[var(--shiki-dark)] pl-[var(--spacing)];

    code {
      @apply block border-0 border-l-[1px] border-solid border-[#738a9466] px-2 py-1 text-base leading-tight;

      counter-reset: step;
      counter-increment: step 0;

      .line {
        @apply relative bg-[var(--bg-color)];

        &::before {
          @apply absolute -left-[var(--spacing)] text-right text-sm content-[counter(step)];

          counter-increment: step;
        }

        &.diff {
          /* @apply mx-[-104px] my-0 inline-block w-screen px-[6.5rem] py-0; */
          /* @apply mx-[-104px] my-0 inline-block w-screen py-0; */

          &::before {
            /* @apply mx-[-104px] my-0 inline-block w-screen px-[6.5rem] py-0; */
            /* @apply absolute left-10; */
          }

          &.add {
            --bg-color: var(--color-line-add);
          }

          &.remove {
            --bg-color: var(--color-line-remove);
          }
        }

        &.highlighted {
          --bg-color: var(--color-line-highlight);
        }
      }

      .has-focused {
        .line {
          filter: blur(0.095rem);
        }

        .focused {
          filter: blur(0);
        }
      }
    }
  }
</style>
