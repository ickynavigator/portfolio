---
import type { HTMLAttributes } from "astro/types";

import { urlForImage } from "~/lib/sanity/urlForImage";
import type { internalGroqTypeReferenceTo, SanityImageAsset } from "~/t/sanity";

interface SanityImageRef {
  _ref: string;
  _type: "reference";
  _weak?: boolean;
  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
}

interface Props extends HTMLAttributes<"img"> {
  node: {
    asset?: SanityImageAsset | SanityImageRef;
    alt: string;
  };
  pictureProps?: HTMLAttributes<"picture">;
}

const { node, pictureProps, ...attrs } = Astro.props;

if (!node?.asset) return null;

const url = urlForImage(node.asset).url();
const webpUrl = urlForImage(node.asset).format("webp").url();
---

<picture {...pictureProps}>
  <source srcset={webpUrl} type="image/webp" />
  <img alt={node.alt} {...attrs} src={url} />
</picture>
