---
import type { ReactNode } from "react";

import { cn } from "~/lib/utils";

interface Props {
  options: {
    label: (opts: { className: string }) => ReactNode;
    value: string;
    disabled?: boolean;
  }[];
  id?: string;
  name: string;
}

const { options, name, id } = Astro.props;

const getId = (value: string) => {
  if (id) return `${id}-${value}`;
  return value;
};
---

<div class="bg-muted inline-flex gap-0.5 rounded-full border p-0.5">
  {
    options.map((option) => (
      <div class="relative">
        <input
          type="radio"
          name={name}
          id={getId(option.value)}
          value={option.value}
          class="peer sr-only"
          disabled={option?.disabled}
        />

        <label
          for={getId(option.value)}
          class={cn(
            "flex size-8 cursor-pointer items-center justify-center rounded-full transition",
            "hover:bg-background hover:scale-110",
            "peer-focus-visible:ring-ring peer-focus-visible:bg-background peer-focus-visible:scale-110 peer-focus-visible:ring-2",
            "peer-checked:bg-background peer-checked:shadow-xs",
          )}
        >
          <span class="sr-only">{option.value}</span>
          {<option.label className="relative-icon" />}
        </label>
      </div>
    ))
  }
</div>
