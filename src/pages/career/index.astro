---
import { IconArrowUpRight, IconFile } from "@tabler/icons-react";

import Container from "~/components/Container.astro";
import PortableText from "~/components/PortableText/PortableText.astro";
import SanityImage from "~/components/SanityImage.astro";
import MainLayout from "~/layouts/MainLayout.astro";
import NavLayout from "~/layouts/NavLayout.astro";
import dayjs from "~/lib/date";
import { loadQuery } from "~/lib/sanity/load-query";
import { CAREERS_QUERY } from "~/lib/sanity/queries";

const { result } = await loadQuery({ query: CAREERS_QUERY });
---

<MainLayout title="Career">
  <NavLayout>
    <Container innerPage>
      <div class="flex items-center justify-between gap-4">
        <h1 class="text-xl leading-none font-bold tracking-tight">
          Experience
        </h1>

        <a
          href="/cv"
          class="hover-link inline-flex items-center gap-1"
          title={`CV Last Updated: ${dayjs(result.cvUpdatedAt).format("MMM DD, YYYY")}`}
          ><IconFile className="relative-icon" />View CV</a
        >
      </div>

      <div class="divide-y">
        {
          result.careers.map((career) => (
            <div class="flex flex-col gap-4 py-4">
              <div class="flex flex-col items-start justify-start gap-4 md:flex-row md:items-center">
                <div class="w-5/100">
                  <SanityImage
                    node={career.company.logo}
                    class="rounded-xs border shadow-xs transition duration-300 hover:shadow-md"
                  />
                </div>

                <div class="flex flex-col gap-2">
                  <h2 class="text-xl leading-none font-bold tracking-tight">
                    {career.company.name}
                  </h2>

                  <h3 class="text-md leading-none font-light tracking-tight">
                    {career.title}
                  </h3>

                  <h4 class="text-muted-foreground flex items-center gap-2 divide-x-2 text-sm leading-none font-medium tracking-tight [&>*:not(:first-child)]:pl-2">
                    <span>
                      {dayjs(career.date.start).format("MMM, YYYY")} -{" "}
                      {career.date.end
                        ? dayjs(career.date.end).format("MMM, YYYY")
                        : "Present"}
                    </span>

                    <span>
                      {career.type} - {career.location.type}
                    </span>

                    <span>{career.location.address}</span>
                  </h4>
                </div>
              </div>

              <ul class="max-w-full overflow-x-auto whitespace-nowrap">
                {career.derefTag.map((tag) => (
                  <li class="hover:bg-primary-foreground me-2 inline-block rounded-full border px-3 py-1.5 text-xs font-light transition-colors">
                    {tag.title}
                  </li>
                ))}
              </ul>

              <div>
                <PortableText data={career.description} />
              </div>

              <ul>
                {career.visibleLinks.map((link) => (
                  <li>
                    <a
                      href={link.url}
                      class="hover:bg-secondary inline-flex gap-2 rounded-lg border px-2 py-1 text-center transition duration-300 hover:shadow-xs"
                    >
                      <span class="text-xs">{link.display}</span>
                      <IconArrowUpRight className="inline relative-icon" />
                    </a>
                  </li>
                ))}
              </ul>
            </div>
          ))
        }
      </div>
    </Container>
  </NavLayout>
</MainLayout>
